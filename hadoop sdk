import java.io.BufferedInputStream;

import java.io.FileInputStream;

import java.io.FileNotFoundException;

import java.io.FileOutputStream;

import java.io.IOException;

import java.io.InputStream;

import java.io.OutputStream;



import org.apache.hadoop.conf.Configuration;

import org.apache.hadoop.fs.FSDataInputStream;

import org.apache.hadoop.fs.FSDataOutputStream;

import org.apache.hadoop.fs.FileStatus;

import org.apache.hadoop.fs.FileSystem;

import org.apache.hadoop.fs.Path;

import org.apache.hadoop.io.IOUtils;

import org.apache.hadoop.util.Progressable;




 



 /**upload*/



 private static void uploadToHdfs() throws FileNotFoundException,IOException {
  String localSrc = "document name and its local path";
  String dst =  "path you want to save";  
  InputStream in = new BufferedInputStream(new FileInputStream(localSrc));
  Configuration conf = new Configuration();

  

  FileSystem fs = FileSystem.get(URI.create(dst), conf);
  OutputStream out = fs.create(new Path(dst), new Progressable() {
   public void progress() {
    System.out.print("uploading");
   }
  });
 }

 



 /*download the document*/

 private static void readFromHdfs() throws FileNotFoundException,IOException {
  String HDFS_PATH = "hdfs://...."; //address of hadoop
    Configuration configuration = new Configuration();
    configuration.set("fs.defaultFS", HDFS_PATH); 
    //connect, use FileSystem to build document on hdfs
    FileSystem fileSystem = FileSystem.get(configuration);
    
   
    configuration.set("fs.hdfs.impl", DistributedFileSystem.class.getName());  
    URL.setURLStreamHandlerFactory(new FsUrlStreamHandlerFactory(configuration)); 
   
    //get the document
    InputStream inputStream = new URL(HDFS_PATH + "/hello.txt").openStream();


 }

 





}
